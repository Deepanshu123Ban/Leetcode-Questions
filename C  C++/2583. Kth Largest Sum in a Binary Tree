lass Solution {
public:
    long long kthLargestLevelSum(TreeNode* root, int k) {
        vector<long long>v;
        if(root==NULL)
        {
            long long a;
            return a;
        }
        queue<TreeNode *>q;
        long long sum=0;
        long long count=0;
        q.push(root);
        q.push(NULL);
        while(!q.empty())
        {
            struct TreeNode *temp=q.front();
            q.pop();
            if(temp==NULL)
            {
                v.push_back(sum);
                count++;
                sum=0;
            }
            if(temp!=NULL)
            {
                sum=sum+temp->val;
                if(temp->left!=NULL)
                {
                    q.push(temp->left);
                }
                if(temp->right!=NULL)
                {
                    q.push(temp->right);
                }
            }
            else{
                if(!q.empty())
                {
                    q.push(NULL);
                }
            }
        }
        sort(v.begin(),v.end());
        int a=v.size();
        if(count<k)
        {
            return -1;
        }
        return v[a-k];
    }
};
